// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: robo.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	RoboApocalypse_GetRoboList_FullMethodName = "/RoboApocalypse/GetRoboList"
)

// RoboApocalypseClient is the client API for RoboApocalypse service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RoboApocalypseClient interface {
	GetRoboList(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*RoboList, error)
}

type roboApocalypseClient struct {
	cc grpc.ClientConnInterface
}

func NewRoboApocalypseClient(cc grpc.ClientConnInterface) RoboApocalypseClient {
	return &roboApocalypseClient{cc}
}

func (c *roboApocalypseClient) GetRoboList(ctx context.Context, in *Filter, opts ...grpc.CallOption) (*RoboList, error) {
	out := new(RoboList)
	err := c.cc.Invoke(ctx, RoboApocalypse_GetRoboList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoboApocalypseServer is the server API for RoboApocalypse service.
// All implementations must embed UnimplementedRoboApocalypseServer
// for forward compatibility
type RoboApocalypseServer interface {
	GetRoboList(context.Context, *Filter) (*RoboList, error)
	mustEmbedUnimplementedRoboApocalypseServer()
}

// UnimplementedRoboApocalypseServer must be embedded to have forward compatible implementations.
type UnimplementedRoboApocalypseServer struct {
}

func (UnimplementedRoboApocalypseServer) GetRoboList(context.Context, *Filter) (*RoboList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoboList not implemented")
}
func (UnimplementedRoboApocalypseServer) mustEmbedUnimplementedRoboApocalypseServer() {}

// UnsafeRoboApocalypseServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RoboApocalypseServer will
// result in compilation errors.
type UnsafeRoboApocalypseServer interface {
	mustEmbedUnimplementedRoboApocalypseServer()
}

func RegisterRoboApocalypseServer(s grpc.ServiceRegistrar, srv RoboApocalypseServer) {
	s.RegisterService(&RoboApocalypse_ServiceDesc, srv)
}

func _RoboApocalypse_GetRoboList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Filter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoboApocalypseServer).GetRoboList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RoboApocalypse_GetRoboList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoboApocalypseServer).GetRoboList(ctx, req.(*Filter))
	}
	return interceptor(ctx, in, info, handler)
}

// RoboApocalypse_ServiceDesc is the grpc.ServiceDesc for RoboApocalypse service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RoboApocalypse_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "RoboApocalypse",
	HandlerType: (*RoboApocalypseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRoboList",
			Handler:    _RoboApocalypse_GetRoboList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "robo.proto",
}
